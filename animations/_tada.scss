$tadaSelector: () !global;

/**
 * Gives an object and tadaa entrance or exit.
 *
 * @author Animation by Dan eden documentation by Anton Ranestam.
 * 
 * @group Regular animations
 * 
 * @param {transition-time} $transition-time (0.3s) - Time the animation should take in seconds.
 * @param {delay} $delay (0s) - Delay given to a animation.
 * @param {timing} $timing ($easeInOut) - What kind of easing.
 * @param {iteration-count} $iteration-count (infinite) - How many times the animations should iterate.
 * @param {direction} $direction (normal) - If the animation should be done once, do it backwards, or both at the same time.
 */
@mixin tada($transition-time: 0.3s, $delay: 0s, $timing: $easeInOut, $iteration-count: 1, $direction: normal) {
  @include animation(tada, $transition-time, $delay, $timing, $iteration-count, $direction);
  $tadaSelector: append($tadaSelector, true) !global;
}

@mixin tadaKey {

  @if length($tadaSelector) >= 1 {

  	// Copyright https://github.com/daneden/animate.css
  	@-webkit-keyframes tada {
  		0% {-webkit-transform: scale(1);}
  		10%, 20% {-webkit-transform: scale(0.9) rotate(-3deg);}
  		30%, 50%, 70%, 90% {-webkit-transform: scale(1.1) rotate(3deg);}
  		40%, 60%, 80% {-webkit-transform: scale(1.1) rotate(-3deg);}
  		100% {-webkit-transform: scale(1) rotate(0);}
  	}

  	@-moz-keyframes tada {
  		0% {-moz-transform: scale(1);}
  		10%, 20% {-moz-transform: scale(0.9) rotate(-3deg);}
  		30%, 50%, 70%, 90% {-moz-transform: scale(1.1) rotate(3deg);}
  		40%, 60%, 80% {-moz-transform: scale(1.1) rotate(-3deg);}
  		100% {-moz-transform: scale(1) rotate(0);}
  	}

  	@keyframes tada {
  		0% {transform: scale(1);}
  		10%, 20% {transform: scale(0.9) rotate(-3deg);}
  		30%, 50%, 70%, 90% {transform: scale(1.1) rotate(3deg);}
  		40%, 60%, 80% {transform: scale(1.1) rotate(-3deg);}
  		100% {transform: scale(1) rotate(0);}
  	}
  }
}
